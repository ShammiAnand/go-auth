// Code generated by ent, DO NOT EDIT.

package auditlogs

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shammianand/go-auth/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldID, id))
}

// ActorID applies equality check predicate on the "actor_id" field. It's identical to ActorIDEQ.
func ActorID(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldActorID, v))
}

// ActionType applies equality check predicate on the "action_type" field. It's identical to ActionTypeEQ.
func ActionType(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldActionType, v))
}

// ResourceType applies equality check predicate on the "resource_type" field. It's identical to ResourceTypeEQ.
func ResourceType(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldResourceType, v))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldResourceID, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldIPAddress, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldUserAgent, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldCreatedAt, v))
}

// ActorIDEQ applies the EQ predicate on the "actor_id" field.
func ActorIDEQ(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldActorID, v))
}

// ActorIDNEQ applies the NEQ predicate on the "actor_id" field.
func ActorIDNEQ(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldActorID, v))
}

// ActorIDIn applies the In predicate on the "actor_id" field.
func ActorIDIn(vs ...uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldActorID, vs...))
}

// ActorIDNotIn applies the NotIn predicate on the "actor_id" field.
func ActorIDNotIn(vs ...uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldActorID, vs...))
}

// ActorIDGT applies the GT predicate on the "actor_id" field.
func ActorIDGT(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldActorID, v))
}

// ActorIDGTE applies the GTE predicate on the "actor_id" field.
func ActorIDGTE(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldActorID, v))
}

// ActorIDLT applies the LT predicate on the "actor_id" field.
func ActorIDLT(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldActorID, v))
}

// ActorIDLTE applies the LTE predicate on the "actor_id" field.
func ActorIDLTE(v uuid.UUID) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldActorID, v))
}

// ActorIDIsNil applies the IsNil predicate on the "actor_id" field.
func ActorIDIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldActorID))
}

// ActorIDNotNil applies the NotNil predicate on the "actor_id" field.
func ActorIDNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldActorID))
}

// ActionTypeEQ applies the EQ predicate on the "action_type" field.
func ActionTypeEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldActionType, v))
}

// ActionTypeNEQ applies the NEQ predicate on the "action_type" field.
func ActionTypeNEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldActionType, v))
}

// ActionTypeIn applies the In predicate on the "action_type" field.
func ActionTypeIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldActionType, vs...))
}

// ActionTypeNotIn applies the NotIn predicate on the "action_type" field.
func ActionTypeNotIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldActionType, vs...))
}

// ActionTypeGT applies the GT predicate on the "action_type" field.
func ActionTypeGT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldActionType, v))
}

// ActionTypeGTE applies the GTE predicate on the "action_type" field.
func ActionTypeGTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldActionType, v))
}

// ActionTypeLT applies the LT predicate on the "action_type" field.
func ActionTypeLT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldActionType, v))
}

// ActionTypeLTE applies the LTE predicate on the "action_type" field.
func ActionTypeLTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldActionType, v))
}

// ActionTypeContains applies the Contains predicate on the "action_type" field.
func ActionTypeContains(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContains(FieldActionType, v))
}

// ActionTypeHasPrefix applies the HasPrefix predicate on the "action_type" field.
func ActionTypeHasPrefix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasPrefix(FieldActionType, v))
}

// ActionTypeHasSuffix applies the HasSuffix predicate on the "action_type" field.
func ActionTypeHasSuffix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasSuffix(FieldActionType, v))
}

// ActionTypeEqualFold applies the EqualFold predicate on the "action_type" field.
func ActionTypeEqualFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEqualFold(FieldActionType, v))
}

// ActionTypeContainsFold applies the ContainsFold predicate on the "action_type" field.
func ActionTypeContainsFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContainsFold(FieldActionType, v))
}

// ResourceTypeEQ applies the EQ predicate on the "resource_type" field.
func ResourceTypeEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldResourceType, v))
}

// ResourceTypeNEQ applies the NEQ predicate on the "resource_type" field.
func ResourceTypeNEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldResourceType, v))
}

// ResourceTypeIn applies the In predicate on the "resource_type" field.
func ResourceTypeIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldResourceType, vs...))
}

// ResourceTypeNotIn applies the NotIn predicate on the "resource_type" field.
func ResourceTypeNotIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldResourceType, vs...))
}

// ResourceTypeGT applies the GT predicate on the "resource_type" field.
func ResourceTypeGT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldResourceType, v))
}

// ResourceTypeGTE applies the GTE predicate on the "resource_type" field.
func ResourceTypeGTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldResourceType, v))
}

// ResourceTypeLT applies the LT predicate on the "resource_type" field.
func ResourceTypeLT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldResourceType, v))
}

// ResourceTypeLTE applies the LTE predicate on the "resource_type" field.
func ResourceTypeLTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldResourceType, v))
}

// ResourceTypeContains applies the Contains predicate on the "resource_type" field.
func ResourceTypeContains(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContains(FieldResourceType, v))
}

// ResourceTypeHasPrefix applies the HasPrefix predicate on the "resource_type" field.
func ResourceTypeHasPrefix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasPrefix(FieldResourceType, v))
}

// ResourceTypeHasSuffix applies the HasSuffix predicate on the "resource_type" field.
func ResourceTypeHasSuffix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasSuffix(FieldResourceType, v))
}

// ResourceTypeEqualFold applies the EqualFold predicate on the "resource_type" field.
func ResourceTypeEqualFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEqualFold(FieldResourceType, v))
}

// ResourceTypeContainsFold applies the ContainsFold predicate on the "resource_type" field.
func ResourceTypeContainsFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContainsFold(FieldResourceType, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDIsNil applies the IsNil predicate on the "resource_id" field.
func ResourceIDIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldResourceID))
}

// ResourceIDNotNil applies the NotNil predicate on the "resource_id" field.
func ResourceIDNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldResourceID))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContainsFold(FieldResourceID, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldMetadata))
}

// ChangesIsNil applies the IsNil predicate on the "changes" field.
func ChangesIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldChanges))
}

// ChangesNotNil applies the NotNil predicate on the "changes" field.
func ChangesNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldChanges))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressIsNil applies the IsNil predicate on the "ip_address" field.
func IPAddressIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldIPAddress))
}

// IPAddressNotNil applies the NotNil predicate on the "ip_address" field.
func IPAddressNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldIPAddress))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContainsFold(FieldIPAddress, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "user_agent" field.
func UserAgentIsNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "user_agent" field.
func UserAgentNotNil() predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldContainsFold(FieldUserAgent, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AuditLogs {
	return predicate.AuditLogs(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuditLogs) predicate.AuditLogs {
	return predicate.AuditLogs(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuditLogs) predicate.AuditLogs {
	return predicate.AuditLogs(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuditLogs) predicate.AuditLogs {
	return predicate.AuditLogs(sql.NotPredicates(p))
}
