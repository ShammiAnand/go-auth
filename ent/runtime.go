// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/shammianand/go-auth/ent/permissions"
	"github.com/shammianand/go-auth/ent/roles"
	"github.com/shammianand/go-auth/ent/schema"
	"github.com/shammianand/go-auth/ent/users"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	permissionsFields := schema.Permissions{}.Fields()
	_ = permissionsFields
	// permissionsDescCreatedAt is the schema descriptor for created_at field.
	permissionsDescCreatedAt := permissionsFields[3].Descriptor()
	// permissions.DefaultCreatedAt holds the default value on creation for the created_at field.
	permissions.DefaultCreatedAt = permissionsDescCreatedAt.Default.(func() time.Time)
	rolesFields := schema.Roles{}.Fields()
	_ = rolesFields
	// rolesDescCreatedAt is the schema descriptor for created_at field.
	rolesDescCreatedAt := rolesFields[3].Descriptor()
	// roles.DefaultCreatedAt holds the default value on creation for the created_at field.
	roles.DefaultCreatedAt = rolesDescCreatedAt.Default.(func() time.Time)
	usersFields := schema.Users{}.Fields()
	_ = usersFields
	// usersDescUUID is the schema descriptor for uuid field.
	usersDescUUID := usersFields[0].Descriptor()
	// users.DefaultUUID holds the default value on creation for the uuid field.
	users.DefaultUUID = usersDescUUID.Default.(func() uuid.UUID)
	// usersDescEmail is the schema descriptor for email field.
	usersDescEmail := usersFields[1].Descriptor()
	// users.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	users.EmailValidator = usersDescEmail.Validators[0].(func(string) error)
	// usersDescPasswordHash is the schema descriptor for password_hash field.
	usersDescPasswordHash := usersFields[2].Descriptor()
	// users.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	users.PasswordHashValidator = usersDescPasswordHash.Validators[0].(func(string) error)
	// usersDescCreatedAt is the schema descriptor for created_at field.
	usersDescCreatedAt := usersFields[3].Descriptor()
	// users.DefaultCreatedAt holds the default value on creation for the created_at field.
	users.DefaultCreatedAt = usersDescCreatedAt.Default.(func() time.Time)
	// usersDescUpdatedAt is the schema descriptor for updated_at field.
	usersDescUpdatedAt := usersFields[4].Descriptor()
	// users.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	users.DefaultUpdatedAt = usersDescUpdatedAt.Default.(func() time.Time)
	// usersDescIsActive is the schema descriptor for is_active field.
	usersDescIsActive := usersFields[6].Descriptor()
	// users.DefaultIsActive holds the default value on creation for the is_active field.
	users.DefaultIsActive = usersDescIsActive.Default.(bool)
	// usersDescEmailVerified is the schema descriptor for email_verified field.
	usersDescEmailVerified := usersFields[7].Descriptor()
	// users.DefaultEmailVerified holds the default value on creation for the email_verified field.
	users.DefaultEmailVerified = usersDescEmailVerified.Default.(bool)
}
